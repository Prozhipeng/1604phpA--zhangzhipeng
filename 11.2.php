<?php
// 斐波那契数列：1 1 2 3 5 8 ...
// 满足要求：当前项 = 前第一项 + 前第二项
// 现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。
// 编写一个类，在类中编写两个静态方法，分别使用递归和非递归方法实现上述要求

	$i=1;//第一项
	$j=1;//第二项
	$sum=1;//第三项（为前两项之和）
	echo 1;//先输出第一项
	echo "\n";//输出换行符
	for($p=0;$p<50;$p++)//循环执行一百次
	{
		echo $sum; //输出第三项的值
		echo "\n";//输出换行符
		$i = $j ;  //把第二项的值赋给第一项
		$j = $sum; //把第三项的值赋给第二项
		$sum = $i + $j;//更新新的第三项值
	}
	//数组实现
	function feibo($n){
	    $a=array();
	    for($i=0;$i<$n;$i++){
	        if($i==0 || $i==1){
	            $a[$i]=1;
	        }else{
	            $a[$i]=$a[$i-1]+$a[$i-2];
	        }
	    }
	    $str = implode(',', $a);
	    return $str;
	}
	var_dump(feibo(10));

	//递归实现
	function digui($n){
	    if($n==0 || $n==1){
	        return 1;
	    }else{
	        return digui($n-1)+digui($n-2);
	    }
	}

 ?>